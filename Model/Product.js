import mongoose from "mongoose";
const { Schema } = mongoose;

const productSchema = new Schema({
  title: { type: String, trim: true },
  brand: { type: String },
  description: { type: [String] },
  modelName: { type: String },
  itemModelNumber: { type: String },
  manufacturer: { type: String },
  itemWeight: { type: String },
  numberOfCores: { type: String },
  highlights: { type: [String] },
  displayTechnology: { type: String },
  displayType: { type: String },
  price: { type: String, min: [0, "Price cannot be negative"] },
  RAM: { type: String },
  size: [{ type: String }],
  category: { type: String },
  subcategory: { type: String },
  categoryName: { type: String },
  subcategoryName: { type: String },
  rating: { type: Number },
  user: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
  quantity: { type: Number, default: 0 },
  sold: { type: Number, default: 0 },
  internalMemory: { type: [String] },
  version: { type: [String] },
  ChargingType: { type: String },
  SIMType: { type: String },
  cameraType: { type: String },
  primaryCameraFeature: { type: String },
  modelYear: { type: String },
  soldBy: { type: String },
  stock: { type: Number, default: 0, min: [0, "Stock cannot be negative"] },
  images: [{ type: String }],
  color: [{ type: String}],
  tags: [String],
  totalrating: { type: Number, default: 0 },
  discountPercentage: {
    type: Number,
    min: [0, "Discount percentage cannot be negative"],
    max: [100, "Discount percentage cannot be greater than 100"]
  },
  internalMemoryChoosen: { type: String },
  modelNumber: { type: String },
  country: { type: String },
  warrantyDescription: { type: String },
  fabricType: { type: String },
  sleeveStyle: { type: String },
  collarStyle: { type: String },
  closureType: { type: String },
  occasion: { type: String },
  fabric: { type: String },
  fit: { type: String },
  neckline: { type: String },
  pattern: { type: String },
  sleeveLength: { type: String },
  screenSize: { type: Number },
  displayType: { type: String },
  graphicsProcessorManufacturer: { type: String },
  graphicsDescription: { type: String },
  processorCount: { type: Number },
  resolution: { type: [String] },
  graphicsCoprocessor: { type: String },
  connectivityTechnology: { type: String },
  powerPlug: { type: String },
  generation: { type: String },
  acceptedVoltageFrequency: { type: String },
  graphicsCardInterface: { type: String },
  displaySizeUnit: { type: String },
  displayResolutionMaximum: { type: Number },
  displayResolutionMaximumUnit: {
    type: String,
    enum: ['dots per inch', 'lines per inch', 'MP', 'pixels', 'pixels per inch']
  },
  sizes: [
    {
      type: String,
      required: [true, "Please Select the Sizes."]
    }
  ],
  country: { type: String },
  weightUnit: {
    type: String,
    enum: ['grams', 'kilograms', 'milligrams', 'ounces', 'pounds']
  },
  model: { type: String },
  modelNumber: { type: String },
  saleType: { type: String, enum: ['free', 'discount', 'premium'] },
  designArea: { type: String, enum: ['front', 'fullFront', 'back'] },
  originalPrice: { type: Number },
  discount: { type: Number },
  review: [{ type: String }],
  reviewTitle: { type: String },
  postedby: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
  productId: { type: String },
  images: [{ type: String }],
  createdAt: { type: Date, default: Date.now },
}, { timestamps: true });

export default mongoose.model('Product', productSchema);
